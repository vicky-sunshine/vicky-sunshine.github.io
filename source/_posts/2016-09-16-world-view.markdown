---
layout: post
title: 世界觀
date: 2016-09-16 00:57:48 +0800
comments: true
categories: life
---

之前曾有面試實習時，我向面試官詢問說：「公司裡目前使用哪個程式語言比較多呢？我進去的話主要會是寫哪些語言？」對方回答我說：「我覺得用哪個語言不是那麼重要，語言只是工具而已。」跟一些教授聊天時也會有類似的說法，感覺一些年紀較大，寫較傳統程式語言（譬如C？）的工程師都蠻會有這種想法，但自己總不是很認同，又說不上來是什麼感覺。

學日語的時候，日語老師說，學習一個新的語言，其實不只是在學如何去用這個語言，其實也默默地在學習背後的文化，譬如在日語當中，對於不同的人，必須參酌彼此的關係使用不同程度的敬語，所以要把日語說的好，你必須要去學著去認知你身處的社會地位，來說得恰當、說得有禮貌、說得很符合你的身份地位。

又想到 1984 當中，有一個語言叫做新語，新語是簡化過後的英文，老大哥為了控制思想，很多原本可以描述比較複雜思考的語言和字彙，都漸漸地被簡化合併，當人跟人溝通一些觀念時，能用的字彙變少，變得會不知道要怎麼去形容，很多複雜的概念也會就此消失，進而去控制人們的思想，這也是我第一次知道這個概念，「語言能去影響思想」的這個概念。

打得這麼瑣碎凌亂，就是最近在想，程式語言其實也跟一般人說話時的語言很像，去學一個程式語言，也是在學著怎麼用這個語言去思考，前陣子上泰安老師的 React JS 課（ReactJS 資料流寫起來也是蠻有趣的），老師說的一句話真的很打動我，他說：「語言變化的這麼快，尤其是前端，那我們要怎麼去判斷說是不是該去學那個新的語言？那就要看他是不是有去改變你的世界觀。」那時候我才突然意識到原來這就是我的感覺，為什麼我那時候會喜歡上寫 Ruby，這是因為我很喜歡 Ruby 帶給我的嶄新的世界觀，還有很喜歡 Ruby 社群的感覺。（MINSWAN, There's more than one way to do it.)

我學 Haskell 的時候，也為 To iterate is human, to recurse divine. 痴迷了一下，沒有暫存變數，全都是層層 pure call function 到最底層，但是到了要跟使用者 IO 做互動，會對外部有副作用的時候，對於 Haskell 怎麼去處理這部分就掌握的不是很好，所以到最後沒有完全踏入其中，但是 Ruby 相對來說，我覺得自己能夠掌握的比較好，也更能體會在寫 Ruby 時開心的感覺。

最近，小記一下。
